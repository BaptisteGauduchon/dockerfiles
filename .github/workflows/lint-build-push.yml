name: lint-build-push

on:
  push:

env:
  IMAGE_NAME: bgauduch/cod2server

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # build the image with latest cracked cod2_lnxded
      - name: Build image
        run: docker image build . --file Dockerfile --build-arg COD2_VERSION="1_3" --build-arg COD2_LNXDED_TYPE="_nodelay_va_loc" --tag $IMAGE_NAME:latest

      - name: save image
        run: docker image save -o image.tar $IMAGE_NAME:latest

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: image.tar

  push_latest:
    runs-on: ubuntu-latest
    needs: build
    # if: {{Â github.event.pull_request && ${GITHUB_REF##*/}=="master" }}

    steps:
      - name: download image artifact
        uses: actions/download-artifact@v2
        with:
          name: image

      - name: load image
        run: docker image load --input image.tar

      - name: Login to Docker Hub registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image to registry
        run: docker push $IMAGE_NAME:latest

  build_all:
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        versions:
          - {cod2_version: "1_3", cod2_lnxded_type: ""}
          - {cod2_version: "1_3", cod2_lnxded_type: "_cracked"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_nodelay"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_patch_va_loc"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_nodelay_va_loc"}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}
        run: docker image build . --file Dockerfile --build-arg COD2_VERSION=${{ matrix.versions.cod2_version }} --build-arg COD2_LNXDED_TYPE=${{ matrix.versions.cod2_lnxded_type }} --tag $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}

      - name: save image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}
        run: docker image save -o image_${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}.tar $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}

      - name: Upload image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }} artifact
        uses: actions/upload-artifact@v2
        with:
          name: image_${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}
          path: image_${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}.tar

  push_all:
    runs-on: ubuntu-latest
    needs: build_all

    strategy:
      matrix:
        versions:
          - {cod2_version: "1_3", cod2_lnxded_type: ""}
          - {cod2_version: "1_3", cod2_lnxded_type: "_cracked"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_nodelay"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_patch_va_loc"}
          - {cod2_version: "1_3", cod2_lnxded_type: "_nodelay_va_loc"}

    steps:
      - name: download image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }} artifact
        uses: actions/download-artifact@v2
        with:
          name: image_${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}

      - name: load image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}
        run: docker image load --input image_${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}.tar

      - name: Login to Docker Hub registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }} to registry
        run: docker push $IMAGE_NAME:${{ matrix.versions.cod2_version }}${{ matrix.versions.cod2_lnxded_type }}
